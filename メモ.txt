●再レンダリングされるのはどんな時？
①stateが更新されたコンポーネントは際レンダリング
②propsが変更されたコンポーネントは際レンダリング（子コンポーネント）
③デフォルトでReactは再レンダリングされたコンポーネントの子要素は全て再レンダリングされる
→よってコンポーネントわけが重要（コンポーネントわけすることで、再レンダリングされる場所を制御できる）

・親のコンポーネントが再レンダリングされても、propsに変更がない限りは子コンポーネントを再レンダリングしないようにできる
→memo(アロー関数)
→propsが変更されない限り際レンダリングされない
→親の再レンダリングに伴って不要な再レンダリングを起こさないためのもの
基本的にはコンポーネントはmemoで囲ってあげると良い◎
memo化する時のコストとは言われるので、一番小さいい粒度のコンポーネントまでは不要だが、
複数の要素から成り立っているコンポーネントや、今後肥大化が予想されるコンポーネントには付与する

●useCallBackについて
処理が変わらない関数を使いまわしますよというもの。
const 関数名 useCallback(() => , [見張る値])
見張っている値が変わった時にuseCallBackを再生成する

・アロー関数で書いた関数は毎回新しい関数を生成していると判断される。
→中でやることは毎回一緒なのに、propsとしては違う関数として判断されてしまう（propsが変わった判定される）
→処理が変わらない場合（何かの処理が走ったら全く同じレスポンスが帰ってくる場合）使い回すと明示する必要がある